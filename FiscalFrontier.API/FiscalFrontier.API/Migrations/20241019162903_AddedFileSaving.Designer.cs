// <auto-generated />
using System;
using FiscalFrontier.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiscalFrontier.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241019162903_AddedFileSaving")]
    partial class AddedFileSaving
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiscalFrontier.API.Models.Domain.AccountNumbers", b =>
                {
                    b.Property<int>("accountNumbersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountNumbersId"));

                    b.Property<string>("accountCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("accountNumber")
                        .HasColumnType("int");

                    b.HasKey("accountNumbersId");

                    b.ToTable("AccountNumbers");
                });

            modelBuilder.Entity("FiscalFrontier.API.Models.Domain.AccountUpdateHistory", b =>
                {
                    b.Property<int>("accountUpdateHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountUpdateHistoryId"));

                    b.Property<int>("accountId")
                        .HasColumnType("int");

                    b.Property<string>("changes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("accountUpdateHistoryId");

                    b.ToTable("AccountUpdatesHistories");
                });

            modelBuilder.Entity("FiscalFrontier.API.Models.Domain.ChartOfAccount", b =>
                {
                    b.Property<int>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountId"));

                    b.Property<bool>("accountActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("accountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("accountCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("accountCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("accountDateTimeAdded")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("accountDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("accountDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("accountInitialBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("accountName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("accountNormalSide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("accountNumber")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("accountOrder")
                        .HasColumnType("int");

                    b.Property<string>("accountStatement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountSubcategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("accountUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("accountId");

                    b.HasIndex("accountName")
                        .IsUnique();

                    b.HasIndex("accountNumber")
                        .IsUnique();

                    b.ToTable("ChartOfAccounts");
                });

            modelBuilder.Entity("FiscalFrontier.API.Models.Domain.FileRecord", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JournalEntryId")
                        .HasColumnType("int");

                    b.HasKey("FileId");

                    b.ToTable("FileRecords");
                });

            modelBuilder.Entity("FiscalFrontier.API.Models.Domain.UserCreationRequest", b =>
                {
                    b.Property<int>("userCreationRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userCreationRequestId"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("securityQuestion1Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("securityQuestion1Id")
                        .HasColumnType("int");

                    b.Property<string>("securityQuestion2Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("securityQuestion2Id")
                        .HasColumnType("int");

                    b.HasKey("userCreationRequestId");

                    b.ToTable("UserCreationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
